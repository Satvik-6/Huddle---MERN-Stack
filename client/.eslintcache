[{"D:\\huddle\\client\\src\\index.js":"1","D:\\huddle\\client\\src\\reportWebVitals.js":"2","D:\\huddle\\client\\src\\App.js":"3","D:\\huddle\\client\\src\\components\\Navbar.js":"4","D:\\huddle\\client\\src\\components\\screens\\Profile.js":"5","D:\\huddle\\client\\src\\components\\screens\\Home.js":"6","D:\\huddle\\client\\src\\components\\screens\\Signup.js":"7","D:\\huddle\\client\\src\\components\\screens\\SignIn.js":"8","D:\\huddle\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Satvik\\Huddle\\server\\client\\src\\index.js":"10","C:\\Satvik\\Huddle\\server\\client\\src\\App.js":"11","C:\\Satvik\\Huddle\\server\\client\\src\\reportWebVitals.js":"12","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Signup.js":"13","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Home.js":"14","C:\\Satvik\\Huddle\\server\\client\\src\\components\\Navbar.js":"15","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\SignIn.js":"16","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\CreatePost.js":"17","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Profile.js":"18","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\UserProfile.js":"19","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\SubscribesUserPosts.js":"20","C:\\Satvik\\Huddle\\server\\client\\src\\reducers\\userReducer.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":789,"mtime":1607091166197,"results":"25","hashOfConfig":"23"},{"size":555,"mtime":1607091484654,"results":"26","hashOfConfig":"23"},{"size":132,"mtime":1607086031848,"results":"27","hashOfConfig":"23"},{"size":805,"mtime":1607090353582,"results":"28","hashOfConfig":"23"},{"size":623,"mtime":1607088243882,"results":"29","hashOfConfig":"23"},{"size":697,"mtime":1607097064516,"results":"30","hashOfConfig":"23"},{"size":873,"mtime":1607093631452,"results":"31","hashOfConfig":"23"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":1856,"mtime":1607175816843,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":3652,"mtime":1607228402883,"results":"36","hashOfConfig":"33"},{"size":6128,"mtime":1607245057002,"results":"37","hashOfConfig":"33"},{"size":3102,"mtime":1607246272507,"results":"38","hashOfConfig":"33"},{"size":2390,"mtime":1607246363295,"results":"39","hashOfConfig":"33"},{"size":2971,"mtime":1607228319935,"results":"40","hashOfConfig":"33"},{"size":5634,"mtime":1607175800942,"results":"41","hashOfConfig":"33"},{"size":10227,"mtime":1607175806788,"results":"42","hashOfConfig":"33"},{"size":6100,"mtime":1607175804739,"results":"43","hashOfConfig":"33"},{"size":551,"mtime":1607175814624,"results":"44","hashOfConfig":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8z5706",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"khh7fy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"65"},"D:\\huddle\\client\\src\\index.js",[],"D:\\huddle\\client\\src\\reportWebVitals.js",[],"D:\\huddle\\client\\src\\App.js",[],"D:\\huddle\\client\\src\\components\\Navbar.js",[],"D:\\huddle\\client\\src\\components\\screens\\Profile.js",[],"D:\\huddle\\client\\src\\components\\screens\\Home.js",["95"],"D:\\huddle\\client\\src\\components\\screens\\Signup.js",[],"D:\\huddle\\client\\src\\components\\screens\\SignIn.js",["96"],"D:\\huddle\\client\\src\\components\\screens\\CreatePost.js",[],"C:\\Satvik\\Huddle\\server\\client\\src\\index.js",[],["97","98"],"C:\\Satvik\\Huddle\\server\\client\\src\\App.js",["99","100"],"import React,{useEffect,createContext,useReducer,useContext} from 'react'\nimport NavBar from './components/Navbar'\nimport './App.css'\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport SignIn from './components/screens/SignIn'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initialState} from './reducers/userReducer'\nimport UserProfile from './components/screens/UserProfile'\nimport SubscribedUserPosts from './components/screens/SubscribesUserPosts'\n\nexport const UserContext = createContext()\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }else{\n      if(!history.location.pathname.startsWith('/reset'))\n           history.push('/signin')\n    }\n  },[])\n  return(\n    <Switch>\n      <Route exact path=\"/\" >\n      <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <SignIn />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost/>\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile/>\n      </Route>\n      <Route path=\"/myfollowingpost\">\n        <SubscribedUserPosts />\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n      \n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;","C:\\Satvik\\Huddle\\server\\client\\src\\reportWebVitals.js",[],"C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Signup.js",["101","102","103"],"import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url])\r\n    const uploadPic = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"Huddle\")\r\n        data.append(\"cloud_name\",\"satvik94\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/satvik94/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n           setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const uploadFields = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const PostData = ()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n            uploadFields()\r\n        }\r\n       \r\n    }\r\n\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Huddle</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Upload pic</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                SignUP\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n             \r\n               \r\n         \r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Home.js",["104","105","106","107","108","109"],"C:\\Satvik\\Huddle\\server\\client\\src\\components\\Navbar.js",[],"C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\SignIn.js",["110","111","112"],"C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\CreatePost.js",["113"],"import React,{useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\nconst CretePost = ()=>{\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n    useEffect(()=>{\r\n       if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n\r\n    const postDetails = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"Huddle\")\r\n        data.append(\"cloud_name\",\"satvik94\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/satvik94/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        \r\n \r\n     \r\n    }\r\n    return(\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input \r\n            type=\"text\"\r\n             placeholder=\"title\"\r\n             value={title}\r\n             onChange={(e)=>setTitle(e.target.value)}\r\n             />\r\n            <input\r\n             type=\"text\"\r\n              placeholder=\"body\"\r\n              value={body}\r\n             onChange={(e)=>setBody(e.target.value)}\r\n              />\r\n            <div className=\"file-field input-field\">\r\n             <div className=\"btn #64b5f6 blue darken-1\">\r\n                 <span>Uplaod Image</span>\r\n                 <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n             </div>\r\n             <div className=\"file-path-wrapper\">\r\n                 <input className=\"file-path validate\" type=\"text\" />\r\n             </div>\r\n             </div>\r\n             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n             onClick={()=>postDetails()}\r\n             \r\n             >\r\n                 Submit post\r\n             </button>\r\n \r\n        </div>\r\n    )\r\n }\r\n \r\n \r\n export default CretePost\r\n \r\n    ","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\Profile.js",["114","115"],"/*import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nconst Profile = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    console.log(state)\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    return (\r\n        <div style={{maxwidth:\"550px\",margin:\"0px auto\"}}>\r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-around\",\r\n                margin:\"18px 0px\",\r\n                borderBottom:\"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style = {{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                    src=\"https://images.unsplash.com/photo-1506748686214-e9df14d4d9d0?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fHBlcnNvbnxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>satvik</h4>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                        <h6>40 posts</h6>\r\n                        <h6>40 followers</h6>\r\n                        <h6>40 following</h6>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        <div className=\"gallery\">\r\n             <img className=\"item\" src=\"https://images.unsplash.com/photo-1506748686214-e9df14d4d9d0?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fHBlcnNvbnxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"/>\r\n             \r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile*/\r\n\r\n\r\nimport React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"Huddle\")\r\n        data.append(\"cloud_name\",\"satvik94\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/satvik94/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n       \r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                 \r\n               </div>\r\n               <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\UserProfile.js",["116","117","118"],"/*import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile = ()=>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    useEffect(()=>{\r\n       fetch('/user/${userid}',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           //console.log(result)\r\n           setProfile(result)\r\n       })\r\n    },[])\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n        \r\n            // dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            //  localStorage.setItem(\"user\",JSON.stringify(data))\r\n            //  setProfile((prevState)=>{\r\n            //      return {\r\n            //          ...prevState,\r\n            //          user:{\r\n            //              ...prevState.user,\r\n            //              followers:[...prevState.user.followers,data._id]\r\n            //             }\r\n            //      }\r\n            //  })\r\n            //  setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            \r\n            // dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            //  localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            //  setProfile((prevState)=>{\r\n            //     const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n            //      return {\r\n            //          ...prevState,\r\n            //          user:{\r\n            //              ...prevState.user,\r\n            //              followers:newFollower\r\n            //             }\r\n            //      }\r\n            //  })\r\n            //  setShowFollow(true)\r\n             \r\n        })\r\n    }\r\n    return (\r\n            <>\r\n            {userProfile ?\r\n            <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    justifyContent:\"space-around\",\r\n                    margin:\"18px 0px\",\r\n                    borderBottom:\"1px solid grey\"\r\n                }}>\r\n                    <div>\r\n                        <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                        src={userProfile.user.pic}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h4>{userProfile.user.name}</h4>\r\n                        <h5>{userProfile.user.email}</h5>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                            <h6>{userProfile.posts.length} posts</h6>\r\n                            <h6>{userProfile.user.followers.length} followers</h6>\r\n                            <h6>{userProfile.user.following.length} following</h6>\r\n                        </div>\r\n                        <button style={{\r\n                            margin:\"10px\"\r\n                        }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                         onClick={()=>followUser()}\r\n                         >\r\n                             Follow\r\n                         </button>\r\n                         <button\r\n                         style={{\r\n                             margin:\"10px\"\r\n                         }}\r\n                         className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                         onClick={()=>unfollowUser()}\r\n                         >\r\n                             UnFollow\r\n                         </button>\r\n                         }\r\n                        \r\n                       \r\n     \r\n                    </div>\r\n                </div>\r\n          \r\n                <div className=\"gallery\">\r\n                    {\r\n                        userProfile.posts.map(item=>{\r\n                            return(\r\n                             <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                            )\r\n                        })\r\n                    }\r\n     \r\n                \r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            : <h2>loading...!</h2>}\r\n            \r\n            </>\r\n        )\r\n     }\r\n     \r\n\r\nexport default Profile*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile  = ()=>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(()=>{\r\n       fetch(`/user/${userid}`,{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           //console.log(result)\r\n         \r\n            setProfile(result)\r\n       })\r\n    },[])\r\n\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n             setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newFollower\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(true)\r\n             \r\n        })\r\n    }\r\n   return (\r\n       <>\r\n       {userProfile ?\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n               margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={userProfile.user.pic}\r\n                   />\r\n               </div>\r\n               <div>\r\n                   <h4>{userProfile.user.name}</h4>\r\n                   <h5>{userProfile.user.email}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{userProfile.posts.length} posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n                   {showfollow?\r\n                   <button style={{\r\n                       margin:\"10px\"\r\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>followUser()}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                    : \r\n                    <button\r\n                    style={{\r\n                        margin:\"10px\"\r\n                    }}\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>unfollowUser()}\r\n                    >\r\n                        UnFollow\r\n                    </button> \r\n                    }\r\n                   \r\n                  \r\n\r\n               </div>\r\n           </div>\r\n     \r\n           <div className=\"gallery\">\r\n               {\r\n                   userProfile.posts.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n       \r\n       \r\n       : <h2>loading...!</h2>}\r\n       \r\n       </>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Satvik\\Huddle\\server\\client\\src\\components\\screens\\SubscribesUserPosts.js",["119","120","121","122","123","124"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/getsubpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","C:\\Satvik\\Huddle\\server\\client\\src\\reducers\\userReducer.js",["125","126","127"],"export const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    //if(action.type==\"UPDATEPIC\"){\r\n    //    return {\r\n    //        ...state,\r\n    //        pic:action.payload\r\n    //    }\r\n    //}\r\n    return state\r\n} ",{"ruleId":"128","severity":1,"message":"129","line":11,"column":21,"nodeType":"130","endLine":11,"endColumn":199},{"ruleId":"131","severity":1,"message":"132","line":4,"column":5,"nodeType":"133","messageId":"134","endLine":4,"endColumn":12},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":18,"column":10,"nodeType":"133","messageId":"134","endLine":18,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":27,"column":5,"nodeType":"142","endLine":27,"endColumn":7,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":15,"column":7,"nodeType":"142","endLine":15,"endColumn":12,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":34,"column":23,"nodeType":"148","messageId":"149","endLine":34,"endColumn":24,"suggestions":"150"},{"ruleId":"146","severity":1,"message":"147","line":34,"column":48,"nodeType":"148","messageId":"149","endLine":34,"endColumn":49,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":6,"column":18,"nodeType":"133","messageId":"134","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":33,"column":28,"nodeType":"155","messageId":"156","endLine":33,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":58,"column":28,"nodeType":"155","messageId":"156","endLine":58,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":85,"column":28,"nodeType":"155","messageId":"156","endLine":85,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":118,"column":192,"nodeType":"155","messageId":"156","endLine":118,"endColumn":194},{"ruleId":"128","severity":1,"message":"129","line":128,"column":33,"nodeType":"130","endLine":128,"endColumn":56},{"ruleId":"131","severity":1,"message":"139","line":6,"column":12,"nodeType":"133","messageId":"134","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":11,"column":23,"nodeType":"148","messageId":"149","endLine":11,"endColumn":24,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"147","line":11,"column":48,"nodeType":"148","messageId":"149","endLine":11,"endColumn":49,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"159","line":37,"column":7,"nodeType":"142","endLine":37,"endColumn":12,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"161","line":109,"column":7,"nodeType":"142","endLine":109,"endColumn":14,"suggestions":"162"},{"ruleId":"128","severity":1,"message":"129","line":127,"column":20,"nodeType":"130","endLine":129,"endColumn":22},{"ruleId":"140","severity":1,"message":"163","line":173,"column":7,"nodeType":"142","endLine":173,"endColumn":9,"suggestions":"164"},{"ruleId":"153","severity":1,"message":"165","line":220,"column":80,"nodeType":"155","messageId":"156","endLine":220,"endColumn":82},{"ruleId":"128","severity":1,"message":"129","line":244,"column":20,"nodeType":"130","endLine":246,"endColumn":22},{"ruleId":"131","severity":1,"message":"152","line":6,"column":18,"nodeType":"133","messageId":"134","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":33,"column":28,"nodeType":"155","messageId":"156","endLine":33,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":58,"column":28,"nodeType":"155","messageId":"156","endLine":58,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":85,"column":28,"nodeType":"155","messageId":"156","endLine":85,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":118,"column":191,"nodeType":"155","messageId":"156","endLine":118,"endColumn":193},{"ruleId":"128","severity":1,"message":"129","line":127,"column":33,"nodeType":"130","endLine":127,"endColumn":56},{"ruleId":"153","severity":1,"message":"154","line":4,"column":19,"nodeType":"155","messageId":"156","endLine":4,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":7,"column":19,"nodeType":"155","messageId":"156","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":10,"column":19,"nodeType":"155","messageId":"156","endLine":10,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'mystyle' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["168"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["169"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["170","171"],["172","173"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["174","175"],["176","177"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["180"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"messageId":"185","fix":"186","desc":"187"},{"messageId":"188","fix":"189","desc":"190"},{"messageId":"185","fix":"191","desc":"187"},{"messageId":"188","fix":"192","desc":"190"},{"messageId":"185","fix":"193","desc":"187"},{"messageId":"188","fix":"194","desc":"190"},{"messageId":"185","fix":"195","desc":"187"},{"messageId":"188","fix":"196","desc":"190"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [dispatch, history]",{"range":"203","text":"204"},"Update the dependencies array to be: [uploadFields, url]",{"range":"205","text":"206"},"removeEscape",{"range":"207","text":"208"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"209","text":"210"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"211","text":"208"},{"range":"212","text":"210"},{"range":"213","text":"208"},{"range":"214","text":"210"},{"range":"215","text":"208"},{"range":"216","text":"210"},"Update the dependencies array to be: [body, history, title, url]",{"range":"217","text":"218"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"219","text":"220"},"Update the dependencies array to be: [userid]",{"range":"221","text":"222"},[1046,1048],"[dispatch, history]",[493,498],"[uploadFields, url]",[1053,1054],"",[1053,1053],"\\",[1078,1079],[1078,1078],[424,425],[424,424],[449,450],[449,449],[1151,1156],"[body, history, title, url]",[3620,3627],"[dispatch, image, state]",[5975,5977],"[userid]"]